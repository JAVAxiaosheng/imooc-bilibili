<?xml version="1.0" encoding="UTF-8"?>
<!-- scan:当此属性设置为 true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当 scan为 true 时，此属性生效。默认的时间间隔为1分钟。-->
<!-- debug:当此属性设置为true 时，将打印出 logback内部日志信息，实时查看 logback运行状态。默认值为 false。通常不打印-->
<configuration scan="true" scanPeriod="10 seconds">
    <!--1. 输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
        <encoder>
            <Pattern>>%date %5p [%thread] %logger{60} [%file : %line] %msg%n</Pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--2. 输出到文档-->
    <!-- level为 DEBUG 日志，时间滚动输出  -->
    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文档的路径及文档名 -->
        <file>D:\imooc-bilibili\log\debug.log</file>
        <!--日志文档输出格式-->
        <encoder>
            <pattern>%date %5p [%thread] %logger{60} [%file : %line] %msg%n</pattern>
            <charset>UTF-8</charset> <!-- 设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 添加.gz历史日志会启用压缩大大缩小日志文件所占空间-->
            <!--<fileNamePattern>/ home/log/stdout.log .%d{yyyy-MIA-dd}.log</fileNamePattern>-->
            <fileNamePattern>D:\imooc-bilibili\log\debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文档保留天数-->
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 此日志文档只记录debug级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--单个指定-->
    <logger name="com.guo.springboot.mapper" level="DEBUG"/>
    <!--全部指定-->
    <!--如果root标签不指定日志级，默认日志级别为debug,,,,
        root标签指定日志级别和追加器指定日志级别，哪个日志级别高以哪个为准
    -->
    <root level="debug">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="DEBUG_FILE"/>    <!--引用appender name-->
    </root>
</configuration>